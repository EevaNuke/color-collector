{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\templates\\\\React\\\\color-collector\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction color(value) {\n  switch (value) {\n    case 1:\n      return 'red';\n      break;\n\n    case 2:\n      return 'green';\n      break;\n\n    case 3:\n      return 'blue';\n      break;\n\n    case 4:\n      return 'yellow';\n      break;\n  }\n\n  ;\n}\n\nfunction Gem(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: 'square ' + color(props.value),\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Gem;\n\nclass Board extends React.Component {\n  renderGem(i) {\n    return /*#__PURE__*/_jsxDEV(Gem, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    const board = []; //loop rendering gems in rows\n\n    for (let i = 0; i < this.props.rows; i++) {\n      const squares = [];\n\n      for (let j = 0; j < this.props.cols; j++) squares.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderGem(i * this.props.cols + j)\n      }, i * this.props.cols + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this));\n\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: squares\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  generateBoard(size) {\n    let board = Array(size).fill(null);\n\n    for (let i = 0; i < size; i++) {\n      board[i] = Math.floor(Math.random() * 4 + 1); // generate values 1-4\n    }\n\n    return board;\n  }\n\n  constructor(props) {\n    const rows = 8;\n    const cols = 6;\n    super(props);\n    this.state = {\n      rows: rows,\n      cols: cols,\n      history: [{\n        squares: this.generateBoard(rows * cols)\n      }],\n      stepNumber: 0,\n      movesLeft: 10,\n      score: 0\n    };\n  }\n\n  handleClick(gemNo) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (this.state.movesLeft < 1) return; //remove gem, add score, fall gems\n\n    const col = gemNo % this.state.cols;\n    const row = Math.floor(gemNo / this.state.cols);\n\n    for (let i = row; i > 0; i--) {\n      squares[i * this.state.cols + col] = squares[(i - 1) * this.state.cols + col];\n    }\n\n    squares[col] = 0;\n    const newScore = this.state.score + 1; //save move\n\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      movesLeft: this.state.movesLeft - 1,\n      score: newScore\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const score = \"Score: \" + this.state.score;\n\n    if (movesLeft > 0) {\n      const movesLeft = \"Moves: \" + this.state.movesLeft;\n    } else {\n      const movesLeft = \"No more moves! The end.\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movesLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          rows: this.state.rows,\n          cols: this.state.cols,\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Gem\");","map":{"version":3,"sources":["C:/xampp/htdocs/templates/React/color-collector/src/index.js"],"names":["React","ReactDOM","color","value","Gem","props","onClick","Board","Component","renderGem","i","squares","render","board","rows","j","cols","push","Game","generateBoard","size","Array","fill","Math","floor","random","constructor","state","history","stepNumber","movesLeft","score","handleClick","gemNo","slice","current","length","col","row","newScore","setState","concat","document","getElementById","calculateWinner","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction color(value) {\r\n\tswitch(value) {\r\n\t\tcase 1: return 'red'; break;\r\n\t\tcase 2: return 'green'; break;\r\n\t\tcase 3: return 'blue'; break;\r\n\t\tcase 4: return 'yellow'; break;\r\n\t};\r\n}\r\n\r\nfunction Gem(props) {\r\n\treturn (\r\n\t\t<button className={'square '+color(props.value)} onClick={props.onClick}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n\trenderGem(i) {\r\n\t\treturn (\r\n\t\t\t<Gem\r\n\t\t\t\tvalue={this.props.squares[i]}\r\n\t\t\t\tonClick={() => this.props.onClick(i)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst board = [];\r\n\t\t\r\n\t\t//loop rendering gems in rows\r\n\t\tfor(let i=0; i<this.props.rows; i++) {\r\n\t\t\tconst squares = [];\r\n\t\t\tfor(let j=0; j<this.props.cols; j++) \r\n\t\t\t\tsquares.push(<div key={i*this.props.cols+j}>\r\n\t\t\t\t\t{this.renderGem(i*this.props.cols+j)}\r\n\t\t\t\t</div>);\r\n\t\t\tboard.push(<div className=\"board-row\" key={i}>{squares}</div>);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{board}\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n}\r\n\r\n\r\nclass Game extends React.Component {\r\n\tgenerateBoard(size) {\r\n\t\tlet board = Array(size).fill(null);\r\n\t\tfor(let i=0; i<size; i++) {\r\n\t\t\tboard[i] = Math.floor((Math.random()*4)+1);\t\t// generate values 1-4\r\n\t\t}\r\n\t\treturn board;\r\n\t}\r\n\t\r\n\tconstructor(props) {\r\n\t\tconst rows = 8;\r\n\t\tconst cols = 6; \r\n\t\t\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trows: rows,\r\n\t\t\tcols: cols,\r\n\t\t\thistory: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: this.generateBoard(rows*cols), \r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tstepNumber: 0,\r\n\t\t\tmovesLeft: 10,\r\n\t\t\tscore: 0,\r\n\t\t};\r\n\t}\r\n\r\n\thandleClick(gemNo) {\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\t\r\n\t\tif(this.state.movesLeft <1) return;\r\n\t\t\r\n\t\t//remove gem, add score, fall gems\r\n\t\tconst col = gemNo % this.state.cols;\r\n\t\tconst row = Math.floor(gemNo/this.state.cols);\t\r\n\t\t\r\n\t\tfor(let i=row; i>0; i--) {\r\n\t\t\tsquares[i*this.state.cols+col] = squares[(i-1)*this.state.cols+col];\r\n\t\t}\r\n\t\tsquares[col] = 0;\r\n\t\t\r\n\t\tconst newScore = this.state.score+1;\r\n\t\t\r\n\t\t//save move\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t}\r\n\t\t\t]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\tmovesLeft: this.state.movesLeft-1,\r\n\t\t\tscore: newScore\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\t\r\n\t\tconst score = \"Score: \"+this.state.score;\r\n\t\tif(movesLeft>0) {\r\n\t\t\tconst movesLeft = \"Moves: \"+this.state.movesLeft;\r\n\t\t} else {\r\n\t\t\tconst movesLeft = \"No more moves! The end.\";\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{score}</div>\r\n\t\t\t\t\t<div>{movesLeft}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board\r\n\t\t\t\t\t\trows={this.state.rows}\r\n\t\t\t\t\t\tcols={this.state.cols}\r\n\t\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\t\tonClick={i => this.handleClick(i)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6]\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}